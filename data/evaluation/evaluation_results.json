{
  "comparative": {
    "methods": [
      "zero_shot"
    ],
    "success_rates": {
      "zero_shot": 0.03333333333333333
    },
    "solution_lengths": {
      "zero_shot": {
        "min": 38,
        "max": 38,
        "avg": 38.0,
        "median": 38
      }
    },
    "failure_reasons": {
      "zero_shot": {
        "Failed to reach empty string": 29,
        "Success": 1
      }
    },
    "transition_usage": {
      "zero_shot": {
        "2": 5,
        "0": 3,
        "1": 6,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 3,
        "10": 3
      }
    },
    "complexity_correlations": {
      "zero_shot": {
        "initial_length": 0.1861289449351974,
        "transitions_count": 0.30166895225407553
      }
    },
    "unique_solutions": {
      "zero_shot": [
        "023"
      ]
    },
    "complexity_metrics": {
      "zero_shot": {
        "avg_efficiency": 0.8421052631578947
      }
    }
  },
  "detailed": {
    "zero_shot": {
      "total_problems": 30,
      "solved_problems": 1,
      "unsolved_problems": 0,
      "unsolved_ids": [],
      "success_rate": 0.03333333333333333,
      "solution_length_stats": {
        "min": 38,
        "max": 38,
        "avg": 38.0,
        "median": 38
      },
      "failure_reasons": {
        "Failed to reach empty string": 29,
        "Success": 1
      },
      "transition_usage": {
        "2": 5,
        "0": 3,
        "1": 6,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 3,
        "10": 3
      },
      "detailed_results": {
        "007": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 3,
          "final_state": "EY}FY}Y}F}F}",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "} -> E",
              "before": "Y}YF}FY}Y}F}F}",
              "after": "YEYF}FY}Y}F}F}"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "Y -> ",
              "before": "YEYF}FY}Y}F}F}",
              "after": "EYF}FY}Y}F}F}"
            },
            {
              "step": 3,
              "transition_idx": 5,
              "transition": "F -> ",
              "before": "EYF}FY}Y}F}F}",
              "after": "EY}FY}Y}F}F}"
            }
          ]
        },
        "011": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "H@1<E>X",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "1<E>X -> H",
              "before": "1<E>X@1<E>X",
              "after": "H@1<E>X"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "H@H -> &",
              "before": "H@1<E>X",
              "after": "H@1<E>X"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "& -> ?",
              "before": "H@1<E>X",
              "after": "H@1<E>X"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "? -> ",
              "before": "H@1<E>X",
              "after": "H@1<E>X"
            }
          ]
        },
        "027": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "^PARALLELIZATION[F;3;[B]]",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "[B] -> )",
              "before": "PARALLELIZATION[F;3;[B]]^PARALLELIZATION[F;3;[B]]",
              "after": "PARALLELIZATION[F;3;)]^PARALLELIZATION[F;3;[B]]"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "F;3;) -> {",
              "before": "PARALLELIZATION[F;3;)]^PARALLELIZATION[F;3;[B]]",
              "after": "PARALLELIZATION[{]^PARALLELIZATION[F;3;[B]]"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "PARALLELIZATION[{] -> @",
              "before": "PARALLELIZATION[{]^PARALLELIZATION[F;3;[B]]",
              "after": "@^PARALLELIZATION[F;3;[B]]"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "@^@ -> @",
              "before": "@^PARALLELIZATION[F;3;[B]]",
              "after": "@^PARALLELIZATION[F;3;[B]]"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "@ -> ",
              "before": "@^PARALLELIZATION[F;3;[B]]",
              "after": "^PARALLELIZATION[F;3;[B]]"
            }
          ]
        },
        "026": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 7,
          "final_state": "E?E?E?H?F?",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "? -> G",
              "before": "E?EH?FE?E?H?F?",
              "after": "EGEH?FE?E?H?F?"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "E -> ",
              "before": "EGEH?FE?E?H?F?",
              "after": "GEH?FE?E?H?F?"
            },
            {
              "step": 3,
              "transition_idx": 1,
              "transition": "GEG -> >",
              "before": "GEH?FE?E?H?F?",
              "after": "GEH?FE?E?H?F?"
            },
            {
              "step": 4,
              "transition_idx": 2,
              "transition": ">> -> ",
              "before": "GEH?FE?E?H?F?",
              "after": "GEH?FE?E?H?F?"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "G -> ",
              "before": "GEH?FE?E?H?F?",
              "after": "EH?FE?E?H?F?"
            },
            {
              "step": 6,
              "transition_idx": 5,
              "transition": "H -> ",
              "before": "EH?FE?E?H?F?",
              "after": "E?FE?E?H?F?"
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "F -> ",
              "before": "E?FE?E?H?F?",
              "after": "E?E?E?H?F?"
            }
          ]
        },
        "010": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "^SYNCHRONIZATION(2:A:(B))",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "(B) -> )",
              "before": "SYNCHRONIZATION(2:A:(B))^SYNCHRONIZATION(2:A:(B))",
              "after": "SYNCHRONIZATION(2:A:))^SYNCHRONIZATION(2:A:(B))"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "2:A:) -> ]",
              "before": "SYNCHRONIZATION(2:A:))^SYNCHRONIZATION(2:A:(B))",
              "after": "SYNCHRONIZATION(])^SYNCHRONIZATION(2:A:(B))"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "SYNCHRONIZATION(]) -> ?",
              "before": "SYNCHRONIZATION(])^SYNCHRONIZATION(2:A:(B))",
              "after": "?^SYNCHRONIZATION(2:A:(B))"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "?^? -> ?",
              "before": "?^SYNCHRONIZATION(2:A:(B))",
              "after": "?^SYNCHRONIZATION(2:A:(B))"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "? -> ",
              "before": "?^SYNCHRONIZATION(2:A:(B))",
              "after": "^SYNCHRONIZATION(2:A:(B))"
            }
          ]
        },
        "006": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 7,
          "final_state": "Y|YCY|Y|Y-",
          "trace": [
            {
              "step": 1,
              "transition_idx": 7,
              "transition": "Y -> ",
              "before": "Y|Y|Y-?Y|Y|Y-",
              "after": "|Y|Y-?Y|Y|Y-"
            },
            {
              "step": 2,
              "transition_idx": 4,
              "transition": "? -> ",
              "before": "|Y|Y-?Y|Y|Y-",
              "after": "|Y|Y-Y|Y|Y-"
            },
            {
              "step": 3,
              "transition_idx": 0,
              "transition": "| -> C",
              "before": "|Y|Y-Y|Y|Y-",
              "after": "CY|Y-Y|Y|Y-"
            },
            {
              "step": 4,
              "transition_idx": 1,
              "transition": "- -> C",
              "before": "CY|Y-Y|Y|Y-",
              "after": "CY|YCY|Y|Y-"
            },
            {
              "step": 5,
              "transition_idx": 3,
              "transition": "CC -> E",
              "before": "CY|YCY|Y|Y-",
              "after": "CY|YCY|Y|Y-"
            },
            {
              "step": 6,
              "transition_idx": 8,
              "transition": "C -> ",
              "before": "CY|YCY|Y|Y-",
              "after": "Y|YCY|Y|Y-"
            },
            {
              "step": 7,
              "transition_idx": 9,
              "transition": "E -> ",
              "before": "Y|YCY|Y|Y-",
              "after": "Y|YCY|Y|Y-"
            }
          ]
        },
        "021": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 13,
          "final_state": "A&F&FA",
          "trace": [
            {
              "step": 1,
              "transition_idx": 4,
              "transition": "~ -> ",
              "before": "2&F&F^~2&F&F^",
              "after": "2&F&F^2&F&F^"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "& -> A",
              "before": "2&F&F^2&F&F^",
              "after": "2AF&F^2&F&F^"
            },
            {
              "step": 3,
              "transition_idx": 1,
              "transition": "& -> A",
              "before": "2AF&F^2&F&F^",
              "after": "2AFAF^2&F&F^"
            },
            {
              "step": 4,
              "transition_idx": 0,
              "transition": "^ -> A",
              "before": "2AFAF^2&F&F^",
              "after": "2AFAFA2&F&F^"
            },
            {
              "step": 5,
              "transition_idx": 0,
              "transition": "^ -> A",
              "before": "2AFAFA2&F&F^",
              "after": "2AFAFA2&F&FA"
            },
            {
              "step": 6,
              "transition_idx": 6,
              "transition": "F -> ",
              "before": "2AFAFA2&F&FA",
              "after": "2AAFA2&F&FA"
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "F -> ",
              "before": "2AAFA2&F&FA",
              "after": "2AAA2&F&FA"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "2 -> ",
              "before": "2AAA2&F&FA",
              "after": "AAA2&F&FA"
            },
            {
              "step": 9,
              "transition_idx": 7,
              "transition": "2 -> ",
              "before": "AAA2&F&FA",
              "after": "AAA&F&FA"
            },
            {
              "step": 10,
              "transition_idx": 5,
              "transition": "A -> ",
              "before": "AAA&F&FA",
              "after": "AA&F&FA"
            },
            {
              "step": 11,
              "transition_idx": 5,
              "transition": "A -> ",
              "before": "AA&F&FA",
              "after": "A&F&FA"
            },
            {
              "step": 12,
              "transition_idx": 3,
              "transition": "AA -> X",
              "before": "A&F&FA",
              "after": "A&F&FA"
            },
            {
              "step": 13,
              "transition_idx": 9,
              "transition": "X -> ",
              "before": "A&F&FA",
              "after": "A&F&FA"
            }
          ]
        },
        "001": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "H{C*F+3",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "C*F+3 -> H",
              "before": "C*F+3{C*F+3",
              "after": "H{C*F+3"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "H{H -> -",
              "before": "H{C*F+3",
              "after": "H{C*F+3"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "- -> (",
              "before": "H{C*F+3",
              "after": "H{C*F+3"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "( -> ",
              "before": "H{C*F+3",
              "after": "H{C*F+3"
            }
          ]
        },
        "017": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 8,
          "final_state": "}}}}}}}CBE",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "} -> ",
              "before": "CBE}3}}Z}}2}}F}CBE",
              "after": "CBE3}}Z}}2}}F}CBE"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "CBE -> <",
              "before": "CBE3}}Z}}2}}F}CBE",
              "after": "<3}}Z}}2}}F}CBE"
            },
            {
              "step": 3,
              "transition_idx": 3,
              "transition": "3 -> ",
              "before": "<3}}Z}}2}}F}CBE",
              "after": "<}}Z}}2}}F}CBE"
            },
            {
              "step": 4,
              "transition_idx": 4,
              "transition": "Z -> ",
              "before": "<}}Z}}2}}F}CBE",
              "after": "<}}}}2}}F}CBE"
            },
            {
              "step": 5,
              "transition_idx": 5,
              "transition": "2 -> ",
              "before": "<}}}}2}}F}CBE",
              "after": "<}}}}}}F}CBE"
            },
            {
              "step": 6,
              "transition_idx": 6,
              "transition": "F -> ",
              "before": "<}}}}}}F}CBE",
              "after": "<}}}}}}}CBE"
            },
            {
              "step": 7,
              "transition_idx": 2,
              "transition": "< -> (",
              "before": "<}}}}}}}CBE",
              "after": "(}}}}}}}CBE"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "( -> ",
              "before": "(}}}}}}}CBE",
              "after": "}}}}}}}CBE"
            }
          ]
        },
        "016": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 11,
          "final_state": "[)",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "[ARCHITECTURE[ -> 1",
              "before": "%>]+)>[ARCHITECTURE[>)+]>%)[X[)",
              "after": "%>]+)>1>)+]>%)[X[)"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": ")>1>) -> G",
              "before": "%>]+)>1>)+]>%)[X[)",
              "after": "%>]+G+]>%)[X[)"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "]+G+] -> B",
              "before": "%>]+G+]>%)[X[)",
              "after": "%>B>%)[X[)"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "%>B>% -> D",
              "before": "%>B>%)[X[)",
              "after": "D)[X[)"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "[ -> ",
              "before": "D)[X[)",
              "after": "D)X[)"
            },
            {
              "step": 6,
              "transition_idx": 5,
              "transition": ") -> ",
              "before": "D)X[)",
              "after": "DX[)"
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "X -> ",
              "before": "DX[)",
              "after": "D[)"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "1 -> ",
              "before": "D[)",
              "after": "D[)"
            },
            {
              "step": 9,
              "transition_idx": 8,
              "transition": "G -> ",
              "before": "D[)",
              "after": "D[)"
            },
            {
              "step": 10,
              "transition_idx": 9,
              "transition": "B -> ",
              "before": "D[)",
              "after": "D[)"
            },
            {
              "step": 11,
              "transition_idx": 10,
              "transition": "D -> ",
              "before": "D[)",
              "after": "[)"
            }
          ]
        },
        "000": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 8,
          "final_state": "~~~~~~~YAB",
          "trace": [
            {
              "step": 1,
              "transition_idx": 1,
              "transition": "YAB -> /",
              "before": "YAB~1~~F~~C~~2~YAB",
              "after": "/~1~~F~~C~~2~YAB"
            },
            {
              "step": 2,
              "transition_idx": 0,
              "transition": "~ -> ",
              "before": "/~1~~F~~C~~2~YAB",
              "after": "/1~~F~~C~~2~YAB"
            },
            {
              "step": 3,
              "transition_idx": 3,
              "transition": "1 -> ",
              "before": "/1~~F~~C~~2~YAB",
              "after": "/~~F~~C~~2~YAB"
            },
            {
              "step": 4,
              "transition_idx": 4,
              "transition": "F -> ",
              "before": "/~~F~~C~~2~YAB",
              "after": "/~~~~C~~2~YAB"
            },
            {
              "step": 5,
              "transition_idx": 5,
              "transition": "C -> ",
              "before": "/~~~~C~~2~YAB",
              "after": "/~~~~~~2~YAB"
            },
            {
              "step": 6,
              "transition_idx": 6,
              "transition": "2 -> ",
              "before": "/~~~~~~2~YAB",
              "after": "/~~~~~~~YAB"
            },
            {
              "step": 7,
              "transition_idx": 2,
              "transition": "/ -> }",
              "before": "/~~~~~~~YAB",
              "after": "}~~~~~~~YAB"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "} -> ",
              "before": "}~~~~~~~YAB",
              "after": "~~~~~~~YAB"
            }
          ]
        },
        "020": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 1,
          "final_state": "F1A|A>@F>A|A>",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "> -> 1",
              "before": "F>A|A>@F>A|A>",
              "after": "F1A|A>@F>A|A>"
            }
          ]
        },
        "023": {
          "valid": true,
          "reason": "Success",
          "steps": 38,
          "final_state": "",
          "trace": [
            {
              "step": 1,
              "transition_idx": 2,
              "transition": "{/D/{ -> Y",
              "before": "(^{/#^}SPECIFICATION}^#/{^(#}2}#",
              "after": "(^{/#^}SPECIFICATION}^#/{^(#}2}#"
            },
            {
              "step": 2,
              "transition_idx": 0,
              "transition": "}SPECIFICATION} -> 1",
              "before": "(^{/#^}SPECIFICATION}^#/{^(#}2}#",
              "after": "(^{/#^1^#/{^(#}2}#"
            },
            {
              "step": 3,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "(^{/#^1^#/{^(#}2}#",
              "after": "(^{/D/{^(#}2}#"
            },
            {
              "step": 4,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "(^{/D/{^(#}2}#",
              "after": "(^{/D/{^(#}2}#"
            },
            {
              "step": 5,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "(^{/D/{^(#}2}#",
              "after": "(^{/D/{^(#}2}#"
            },
            {
              "step": 6,
              "transition_idx": 2,
              "transition": "{/D/{ -> Y",
              "before": "(^{/D/{^(#}2}#",
              "after": "(^Y^(#}2}#"
            },
            {
              "step": 7,
              "transition_idx": 3,
              "transition": "(^Y^( -> C",
              "before": "(^Y^(#}2}#",
              "after": "C#}2}#"
            },
            {
              "step": 8,
              "transition_idx": 4,
              "transition": "} -> ",
              "before": "C#}2}#",
              "after": "C#2}#"
            },
            {
              "step": 9,
              "transition_idx": 5,
              "transition": "# -> ",
              "before": "C#2}#",
              "after": "C2}#"
            },
            {
              "step": 10,
              "transition_idx": 6,
              "transition": "2 -> ",
              "before": "C2}#",
              "after": "C}#"
            },
            {
              "step": 11,
              "transition_idx": 2,
              "transition": "{/D/{ -> Y",
              "before": "C}#",
              "after": "C}#"
            },
            {
              "step": 12,
              "transition_idx": 7,
              "transition": "1 -> ",
              "before": "C}#",
              "after": "C}#"
            },
            {
              "step": 13,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "C}#",
              "after": "C}#"
            },
            {
              "step": 14,
              "transition_idx": 8,
              "transition": "D -> ",
              "before": "C}#",
              "after": "C}#"
            },
            {
              "step": 15,
              "transition_idx": 9,
              "transition": "Y -> ",
              "before": "C}#",
              "after": "C}#"
            },
            {
              "step": 16,
              "transition_idx": 10,
              "transition": "C -> ",
              "before": "C}#",
              "after": "}#"
            },
            {
              "step": 17,
              "transition_idx": 0,
              "transition": "}SPECIFICATION} -> 1",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 18,
              "transition_idx": 0,
              "transition": "}SPECIFICATION} -> 1",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 19,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 20,
              "transition_idx": 1,
              "transition": "#^1^# -> D",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 21,
              "transition_idx": 2,
              "transition": "{/D/{ -> Y",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 22,
              "transition_idx": 2,
              "transition": "{/D/{ -> Y",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 23,
              "transition_idx": 3,
              "transition": "(^Y^( -> C",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 24,
              "transition_idx": 3,
              "transition": "(^Y^( -> C",
              "before": "}#",
              "after": "}#"
            },
            {
              "step": 25,
              "transition_idx": 4,
              "transition": "} -> ",
              "before": "}#",
              "after": "#"
            },
            {
              "step": 26,
              "transition_idx": 4,
              "transition": "} -> ",
              "before": "#",
              "after": "#"
            },
            {
              "step": 27,
              "transition_idx": 5,
              "transition": "# -> ",
              "before": "#",
              "after": ""
            }
          ]
        },
        "019": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 8,
          "final_state": "{{{{{{{1ED",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "{ -> ",
              "before": "1ED{H{{C{{Y{{3{1ED",
              "after": "1EDH{{C{{Y{{3{1ED"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "1ED -> &",
              "before": "1EDH{{C{{Y{{3{1ED",
              "after": "&H{{C{{Y{{3{1ED"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "& -> #",
              "before": "&H{{C{{Y{{3{1ED",
              "after": "#H{{C{{Y{{3{1ED"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "H -> ",
              "before": "#H{{C{{Y{{3{1ED",
              "after": "#{{C{{Y{{3{1ED"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "C -> ",
              "before": "#{{C{{Y{{3{1ED",
              "after": "#{{{{Y{{3{1ED"
            },
            {
              "step": 6,
              "transition_idx": 5,
              "transition": "Y -> ",
              "before": "#{{{{Y{{3{1ED",
              "after": "#{{{{{{3{1ED"
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "3 -> ",
              "before": "#{{{{{{3{1ED",
              "after": "#{{{{{{{1ED"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "# -> ",
              "before": "#{{{{{{{1ED",
              "after": "{{{{{{{1ED"
            }
          ]
        },
        "015": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "0]0]0]X]2]",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "] -> D",
              "before": "0]0X]20]0]X]2]",
              "after": "0D0X]20]0]X]2]"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "0 -> ",
              "before": "0D0X]20]0]X]2]",
              "after": "D0X]20]0]X]2]"
            },
            {
              "step": 3,
              "transition_idx": 5,
              "transition": "X -> ",
              "before": "D0X]20]0]X]2]",
              "after": "D0]20]0]X]2]"
            },
            {
              "step": 4,
              "transition_idx": 6,
              "transition": "2 -> ",
              "before": "D0]20]0]X]2]",
              "after": "D0]0]0]X]2]"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "D -> ",
              "before": "D0]0]0]X]2]",
              "after": "0]0]0]X]2]"
            }
          ]
        },
        "003": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "1{Y|H&3",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "Y|H&3 -> 1",
              "before": "Y|H&3{Y|H&3",
              "after": "1{Y|H&3"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "1{1 -> -",
              "before": "1{Y|H&3",
              "after": "1{Y|H&3"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "- -> ?",
              "before": "1{Y|H&3",
              "after": "1{Y|H&3"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "? -> ",
              "before": "1{Y|H&3",
              "after": "1{Y|H&3"
            }
          ]
        },
        "002": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "D#0-G^2",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "0-G^2 -> D",
              "before": "0-G^2#0-G^2",
              "after": "D#0-G^2"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "D#D -> <",
              "before": "D#0-G^2",
              "after": "D#0-G^2"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "< -> (",
              "before": "D#0-G^2",
              "after": "D#0-G^2"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "( -> ",
              "before": "D#0-G^2",
              "after": "D#0-G^2"
            }
          ]
        },
        "014": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 6,
          "final_state": "&0DB&0&0^",
          "trace": [
            {
              "step": 1,
              "transition_idx": 5,
              "transition": "B -> ",
              "before": "B&0&0^@B&0&0^",
              "after": "&0&0^@B&0&0^"
            },
            {
              "step": 2,
              "transition_idx": 6,
              "transition": "0 -> ",
              "before": "&0&0^@B&0&0^",
              "after": "&&0^@B&0&0^"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "& -> D",
              "before": "&&0^@B&0&0^",
              "after": "D&0^@B&0&0^"
            },
            {
              "step": 4,
              "transition_idx": 0,
              "transition": "^ -> D",
              "before": "D&0^@B&0&0^",
              "after": "D&0D@B&0&0^"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "@ -> ",
              "before": "D&0D@B&0&0^",
              "after": "D&0DB&0&0^"
            },
            {
              "step": 6,
              "transition_idx": 8,
              "transition": "D -> ",
              "before": "D&0DB&0&0^",
              "after": "&0DB&0&0^"
            }
          ]
        },
        "018": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 7,
          "final_state": "1)1)1)X)E)",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": ") -> B",
              "before": "1)1X)E1)1)X)E)",
              "after": "1B1X)E1)1)X)E)"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "1 -> ",
              "before": "1B1X)E1)1)X)E)",
              "after": "B1X)E1)1)X)E)"
            },
            {
              "step": 3,
              "transition_idx": 5,
              "transition": "X -> ",
              "before": "B1X)E1)1)X)E)",
              "after": "B1)E1)1)X)E)"
            },
            {
              "step": 4,
              "transition_idx": 6,
              "transition": "E -> ",
              "before": "B1)E1)1)X)E)",
              "after": "B1)1)1)X)E)"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "B -> ",
              "before": "B1)1)1)X)E)",
              "after": "1)1)1)X)E)"
            },
            {
              "step": 6,
              "transition_idx": 1,
              "transition": "B1B -> &",
              "before": "1)1)1)X)E)",
              "after": "1)1)1)X)E)"
            },
            {
              "step": 7,
              "transition_idx": 2,
              "transition": "&& -> ",
              "before": "1)1)1)X)E)",
              "after": "1)1)1)X)E)"
            }
          ]
        },
        "022": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 8,
          "final_state": "3/3D/X/0&",
          "trace": [
            {
              "step": 1,
              "transition_idx": 4,
              "transition": "? -> ",
              "before": "D/X/0&?D/X/0&",
              "after": "D/X/0&D/X/0&"
            },
            {
              "step": 2,
              "transition_idx": 6,
              "transition": "0 -> ",
              "before": "D/X/0&D/X/0&",
              "after": "D/X/&D/X/0&"
            },
            {
              "step": 3,
              "transition_idx": 7,
              "transition": "X -> ",
              "before": "D/X/&D/X/0&",
              "after": "D//&D/X/0&"
            },
            {
              "step": 4,
              "transition_idx": 2,
              "transition": "/ -> 3",
              "before": "D//&D/X/0&",
              "after": "D3/&D/X/0&"
            },
            {
              "step": 5,
              "transition_idx": 1,
              "transition": "& -> 3",
              "before": "D3/&D/X/0&",
              "after": "D3/3D/X/0&"
            },
            {
              "step": 6,
              "transition_idx": 3,
              "transition": "33 -> C",
              "before": "D3/3D/X/0&",
              "after": "D3/3D/X/0&"
            },
            {
              "step": 7,
              "transition_idx": 5,
              "transition": "D -> ",
              "before": "D3/3D/X/0&",
              "after": "3/3D/X/0&"
            },
            {
              "step": 8,
              "transition_idx": 9,
              "transition": "C -> ",
              "before": "3/3D/X/0&",
              "after": "3/3D/X/0&"
            }
          ]
        },
        "029": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "3]3]3]Y]B]",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "] -> 1",
              "before": "3]3Y]B3]3]Y]B]",
              "after": "313Y]B3]3]Y]B]"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "3 -> ",
              "before": "313Y]B3]3]Y]B]",
              "after": "13Y]B3]3]Y]B]"
            },
            {
              "step": 3,
              "transition_idx": 5,
              "transition": "Y -> ",
              "before": "13Y]B3]3]Y]B]",
              "after": "13]B3]3]Y]B]"
            },
            {
              "step": 4,
              "transition_idx": 6,
              "transition": "B -> ",
              "before": "13]B3]3]Y]B]",
              "after": "13]3]3]Y]B]"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "1 -> ",
              "before": "13]3]3]Y]B]",
              "after": "3]3]3]Y]B]"
            }
          ]
        },
        "013": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "D]0&H<G",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "0&H<G -> D",
              "before": "0&H<G]0&H<G",
              "after": "D]0&H<G"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "D]D -> /",
              "before": "D]0&H<G",
              "after": "D]0&H<G"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "/ -> @",
              "before": "D]0&H<G",
              "after": "D]0&H<G"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "@ -> ",
              "before": "D]0&H<G",
              "after": "D]0&H<G"
            }
          ]
        },
        "005": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 6,
          "final_state": "3)G3)3)A)G)",
          "trace": [
            {
              "step": 1,
              "transition_idx": 3,
              "transition": "3 -> ",
              "before": "3)3A)G3)3)A)G)",
              "after": ")3A)G3)3)A)G)"
            },
            {
              "step": 2,
              "transition_idx": 0,
              "transition": ") -> G",
              "before": ")3A)G3)3)A)G)",
              "after": "G3A)G3)3)A)G)"
            },
            {
              "step": 3,
              "transition_idx": 1,
              "transition": "G3G -> *",
              "before": "G3A)G3)3)A)G)",
              "after": "G3A)G3)3)A)G)"
            },
            {
              "step": 4,
              "transition_idx": 5,
              "transition": "A -> ",
              "before": "G3A)G3)3)A)G)",
              "after": "G3)G3)3)A)G)"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "G -> ",
              "before": "G3)G3)3)A)G)",
              "after": "3)G3)3)A)G)"
            },
            {
              "step": 6,
              "transition_idx": 2,
              "transition": "** -> ",
              "before": "3)G3)3)A)G)",
              "after": "3)G3)3)A)G)"
            }
          ]
        },
        "025": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 11,
          "final_state": "}(",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "}SPECIFICATION} -> 1",
              "before": "!*[-(*}SPECIFICATION}*(-[*!(}3}(",
              "after": "!*[-(*1*(-[*!(}3}("
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "(*1*( -> Y",
              "before": "!*[-(*1*(-[*!(}3}(",
              "after": "!*[-Y-[*!(}3}("
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "[-Y-[ -> H",
              "before": "!*[-Y-[*!(}3}(",
              "after": "!*H*!(}3}("
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "!*H*! -> Z",
              "before": "!*H*!(}3}(",
              "after": "Z(}3}("
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "} -> ",
              "before": "Z(}3}(",
              "after": "Z(3}("
            },
            {
              "step": 6,
              "transition_idx": 5,
              "transition": "( -> ",
              "before": "Z(3}(",
              "after": "Z3}("
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "3 -> ",
              "before": "Z3}(",
              "after": "Z}("
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "1 -> ",
              "before": "Z}(",
              "after": "Z}("
            },
            {
              "step": 9,
              "transition_idx": 8,
              "transition": "Y -> ",
              "before": "Z}(",
              "after": "Z}("
            },
            {
              "step": 10,
              "transition_idx": 9,
              "transition": "H -> ",
              "before": "Z}(",
              "after": "Z}("
            },
            {
              "step": 11,
              "transition_idx": 10,
              "transition": "Z -> ",
              "before": "Z}(",
              "after": "}("
            }
          ]
        },
        "009": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "-SPECIFICATION(3:C:(B))",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "(B) -> [",
              "before": "SPECIFICATION(3:C:(B))-SPECIFICATION(3:C:(B))",
              "after": "SPECIFICATION(3:C:[)-SPECIFICATION(3:C:(B))"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "3:C:[ -> }",
              "before": "SPECIFICATION(3:C:[)-SPECIFICATION(3:C:(B))",
              "after": "SPECIFICATION(})-SPECIFICATION(3:C:(B))"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "SPECIFICATION(}) -> !",
              "before": "SPECIFICATION(})-SPECIFICATION(3:C:(B))",
              "after": "!-SPECIFICATION(3:C:(B))"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "!-! -> !",
              "before": "!-SPECIFICATION(3:C:(B))",
              "after": "!-SPECIFICATION(3:C:(B))"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "! -> ",
              "before": "!-SPECIFICATION(3:C:(B))",
              "after": "-SPECIFICATION(3:C:(B))"
            }
          ]
        },
        "008": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 8,
          "final_state": "[[[[[[[D10",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "[ -> ",
              "before": "D10[Z[[F[[B[[G[D10",
              "after": "D10Z[[F[[B[[G[D10"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "D10 -> &",
              "before": "D10Z[[F[[B[[G[D10",
              "after": "&Z[[F[[B[[G[D10"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "& -> @",
              "before": "&Z[[F[[B[[G[D10",
              "after": "@Z[[F[[B[[G[D10"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "Z -> ",
              "before": "@Z[[F[[B[[G[D10",
              "after": "@[[F[[B[[G[D10"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "F -> ",
              "before": "@[[F[[B[[G[D10",
              "after": "@[[[[B[[G[D10"
            },
            {
              "step": 6,
              "transition_idx": 5,
              "transition": "B -> ",
              "before": "@[[[[B[[G[D10",
              "after": "@[[[[[[G[D10"
            },
            {
              "step": 7,
              "transition_idx": 6,
              "transition": "G -> ",
              "before": "@[[[[[[G[D10",
              "after": "@[[[[[[[D10"
            },
            {
              "step": 8,
              "transition_idx": 7,
              "transition": "@ -> ",
              "before": "@[[[[[[[D10",
              "after": "[[[[[[[D10"
            }
          ]
        },
        "024": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "&SPECIFICATION(1:Y:(C))",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "(C) -> )",
              "before": "SPECIFICATION(1:Y:(C))&SPECIFICATION(1:Y:(C))",
              "after": "SPECIFICATION(1:Y:))&SPECIFICATION(1:Y:(C))"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "1:Y:) -> {",
              "before": "SPECIFICATION(1:Y:))&SPECIFICATION(1:Y:(C))",
              "after": "SPECIFICATION({)&SPECIFICATION(1:Y:(C))"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "SPECIFICATION({) -> @",
              "before": "SPECIFICATION({)&SPECIFICATION(1:Y:(C))",
              "after": "@&SPECIFICATION(1:Y:(C))"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "@&@ -> @",
              "before": "@&SPECIFICATION(1:Y:(C))",
              "after": "@&SPECIFICATION(1:Y:(C))"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "@ -> ",
              "before": "@&SPECIFICATION(1:Y:(C))",
              "after": "&SPECIFICATION(1:Y:(C))"
            }
          ]
        },
        "004": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "D@0+B<Z",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "0+B<Z -> D",
              "before": "0+B<Z@0+B<Z",
              "after": "D@0+B<Z"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "D@D -> /",
              "before": "D@0+B<Z",
              "after": "D@0+B<Z"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "/ -> !",
              "before": "D@0+B<Z",
              "after": "D@0+B<Z"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "! -> ",
              "before": "D@0+B<Z",
              "after": "D@0+B<Z"
            }
          ]
        },
        "012": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 4,
          "final_state": "0[B^F>1",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "B^F>1 -> 0",
              "before": "B^F>1[B^F>1",
              "after": "0[B^F>1"
            },
            {
              "step": 2,
              "transition_idx": 1,
              "transition": "0[0 -> <",
              "before": "0[B^F>1",
              "after": "0[B^F>1"
            },
            {
              "step": 3,
              "transition_idx": 2,
              "transition": "< -> ?",
              "before": "0[B^F>1",
              "after": "0[B^F>1"
            },
            {
              "step": 4,
              "transition_idx": 3,
              "transition": "? -> ",
              "before": "0[B^F>1",
              "after": "0[B^F>1"
            }
          ]
        },
        "028": {
          "valid": false,
          "reason": "Failed to reach empty string",
          "steps": 5,
          "final_state": "Y~Y~Y~3~Z~",
          "trace": [
            {
              "step": 1,
              "transition_idx": 0,
              "transition": "~ -> G",
              "before": "Y~Y3~ZY~Y~3~Z~",
              "after": "YGY3~ZY~Y~3~Z~"
            },
            {
              "step": 2,
              "transition_idx": 3,
              "transition": "Y -> ",
              "before": "YGY3~ZY~Y~3~Z~",
              "after": "GY3~ZY~Y~3~Z~"
            },
            {
              "step": 3,
              "transition_idx": 5,
              "transition": "3 -> ",
              "before": "GY3~ZY~Y~3~Z~",
              "after": "GY~ZY~Y~3~Z~"
            },
            {
              "step": 4,
              "transition_idx": 6,
              "transition": "Z -> ",
              "before": "GY~ZY~Y~3~Z~",
              "after": "GY~Y~Y~3~Z~"
            },
            {
              "step": 5,
              "transition_idx": 4,
              "transition": "G -> ",
              "before": "GY~Y~Y~3~Z~",
              "after": "Y~Y~Y~3~Z~"
            }
          ]
        }
      },
      "complexity_stats": [
        {
          "problem_id": "023",
          "initial_length": 32,
          "transitions_count": 11,
          "solution_length": 38
        }
      ]
    }
  }
}